Compile Apollo › customScalars.re › output
// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require(\"bs-platform/lib/js/caml_option.js\");

var Raw = {};

function parse(value) {
  var value$1 = value.customScalarField;
  var value$2 = value$1.nullable;
  return {
          customScalarField: {
            __typename: value$1.__typename,
            nullable: !(value$2 == null) ? Caml_option.some(value$2) : undefined,
            nonNullable: value$1.nonNullable
          }
        };
}

function serialize(value) {
  var value$1 = value.customScalarField;
  var value$2 = value$1.nonNullable;
  var value$3 = value$1.nullable;
  var nullable = value$3 !== undefined ? Caml_option.valFromOption(value$3) : null;
  var value$4 = value$1.__typename;
  var customScalarField = {
    __typename: value$4,
    nullable: nullable,
    nonNullable: value$2
  };
  return {
          customScalarField: customScalarField
        };
}

function serializeVariables(inp) {
  var a = inp.opt;
  return {
          opt: a !== undefined ? Caml_option.valFromOption(a) : undefined,
          req: inp.req
        };
}

function makeVariables(opt, req, param) {
  return {
          opt: opt,
          req: req
        };
}

var Z__INTERNAL = {
  _graphql_opt_119: 0,
  _graphql_argOptional_106: 0,
  _graphql_req_138: 0,
  _graphql_argRequired_125: 0,
  graphql_module: 0
};

var MyQuery = {
  Raw: Raw,
  query: \"query ($opt: CustomScalar, $req: CustomScalar!)  {\\ncustomScalarField(argOptional: $opt, argRequired: $req)  {\\n__typename  \\nnullable  \\nnonNullable  \\n}\\n\\n}\\n\",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  Z__INTERNAL: Z__INTERNAL
};

exports.MyQuery = MyQuery;
/* No side effect */

