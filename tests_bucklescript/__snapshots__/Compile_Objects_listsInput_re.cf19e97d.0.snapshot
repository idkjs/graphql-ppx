Compile Objects › listsInput.re › output
// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require(\"bs-platform/lib/js/array.js\");

var Raw = {};

function parse(value) {
  return {
          listsInput: value.listsInput
        };
}

function serialize(value) {
  return {
          listsInput: value.listsInput
        };
}

function serializeInputObjectListsInput(inp) {
  var a = inp.nullableOfNullable;
  var a$1 = inp.nullableOfNonNullable;
  var a$2 = inp.nonNullableOfNullable;
  var a$3 = inp.nonNullableOfNonNullable;
  return {
          nullableOfNullable: a !== undefined ? $$Array.map((function (b) {
                    if (b !== undefined) {
                      return b;
                    }
                    
                  }), a) : undefined,
          nullableOfNonNullable: a$1 !== undefined ? $$Array.map((function (b) {
                    return b;
                  }), a$1) : undefined,
          nonNullableOfNullable: $$Array.map((function (b) {
                  if (b !== undefined) {
                    return b;
                  }
                  
                }), a$2),
          nonNullableOfNonNullable: $$Array.map((function (b) {
                  return b;
                }), a$3)
        };
}

function serializeVariables(inp) {
  return {
          arg: serializeInputObjectListsInput(inp.arg)
        };
}

function makeVariables(arg, param) {
  return {
          arg: arg
        };
}

function makeInputObjectListsInput(nullableOfNullable, nullableOfNonNullable, nonNullableOfNullable, nonNullableOfNonNullable, param) {
  return {
          nullableOfNullable: nullableOfNullable,
          nullableOfNonNullable: nullableOfNonNullable,
          nonNullableOfNullable: nonNullableOfNullable,
          nonNullableOfNonNullable: nonNullableOfNonNullable
        };
}

var MyQuery = {
  Raw: Raw,
  query: \"query ($arg: ListsInput!)  {\\nlistsInput(arg: $arg)  \\n}\\n\",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  serializeInputObjectListsInput: serializeInputObjectListsInput,
  makeVariables: makeVariables,
  makeInputObjectListsInput: makeInputObjectListsInput
};

exports.MyQuery = MyQuery;
/* No side effect */

