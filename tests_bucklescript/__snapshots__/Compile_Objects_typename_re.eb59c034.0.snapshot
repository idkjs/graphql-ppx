Compile Objects › typename.re › output
// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require(\"bs-platform/lib/js/caml_option.js\");

var Raw = {};

function parse(value) {
  var value$1 = value.first;
  var value$2 = value$1.inner;
  var inner;
  if (value$2 == null) {
    inner = undefined;
  } else {
    var value$3 = value$2.inner;
    var inner$1;
    if (value$3 == null) {
      inner$1 = undefined;
    } else {
      var value$4 = value$3.field;
      var value$5 = value$3.__typename;
      inner$1 = {
        __typename: value$5,
        field: value$4
      };
    }
    var value$6 = value$2.__typename;
    inner = {
      __typename: value$6,
      inner: inner$1
    };
  }
  var value$7 = value$1.__typename;
  return {
          first: {
            __typename: value$7,
            inner: inner
          }
        };
}

function serialize(value) {
  var value$1 = value.first;
  var value$2 = value$1.inner;
  var inner;
  if (value$2 !== undefined) {
    var value$3 = Caml_option.valFromOption(value$2);
    var value$4 = value$3.inner;
    var inner$1;
    if (value$4 !== undefined) {
      var value$5 = Caml_option.valFromOption(value$4);
      var value$6 = value$5.field;
      var value$7 = value$5.__typename;
      inner$1 = {
        __typename: value$7,
        field: value$6
      };
    } else {
      inner$1 = null;
    }
    var value$8 = value$3.__typename;
    inner = {
      __typename: value$8,
      inner: inner$1
    };
  } else {
    inner = null;
  }
  var value$9 = value$1.__typename;
  return {
          first: {
            __typename: value$9,
            inner: inner
          }
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var MyQuery = {
  Raw: Raw,
  query: \"query   {\\nfirst: nestedObject  {\\n__typename  \\ninner  {\\n__typename  \\ninner  {\\n__typename  \\nfield  \\n}\\n\\n}\\n\\n}\\n\\n}\\n\",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

exports.MyQuery = MyQuery;
/* No side effect */

