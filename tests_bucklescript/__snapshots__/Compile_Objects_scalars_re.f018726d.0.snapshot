Compile Objects › scalars.re › output
// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

function parse(value) {
  var value$1 = value.variousScalars;
  var value$2 = value$1.id;
  var value$3 = value$1.nullableID;
  var nullableID = !(value$3 == null) ? value$3 : undefined;
  var value$4 = value$1.boolean;
  var value$5 = value$1.nullableBoolean;
  var nullableBoolean = !(value$5 == null) ? value$5 : undefined;
  var value$6 = value$1.float;
  var value$7 = value$1.nullableFloat;
  var nullableFloat = !(value$7 == null) ? value$7 : undefined;
  var value$8 = value$1.int;
  var value$9 = value$1.nullableInt;
  var nullableInt = !(value$9 == null) ? value$9 : undefined;
  var value$10 = value$1.string;
  var value$11 = value$1.nullableString;
  var nullableString = !(value$11 == null) ? value$11 : undefined;
  return {
          variousScalars: {
            nullableString: nullableString,
            string: value$10,
            nullableInt: nullableInt,
            int: value$8,
            nullableFloat: nullableFloat,
            float: value$6,
            nullableBoolean: nullableBoolean,
            boolean: value$4,
            nullableID: nullableID,
            id: value$2
          }
        };
}

function serialize(value) {
  var value$1 = value.variousScalars;
  var value$2 = value$1.id;
  var value$3 = value$1.nullableID;
  var nullableID = value$3 !== undefined ? value$3 : null;
  var value$4 = value$1.boolean;
  var value$5 = value$1.nullableBoolean;
  var nullableBoolean = value$5 !== undefined ? value$5 : null;
  var value$6 = value$1.float;
  var value$7 = value$1.nullableFloat;
  var nullableFloat = value$7 !== undefined ? value$7 : null;
  var value$8 = value$1.int;
  var value$9 = value$1.nullableInt;
  var nullableInt = value$9 !== undefined ? value$9 : null;
  var value$10 = value$1.string;
  var value$11 = value$1.nullableString;
  var nullableString = value$11 !== undefined ? value$11 : null;
  return {
          variousScalars: {
            nullableString: nullableString,
            string: value$10,
            nullableInt: nullableInt,
            int: value$8,
            nullableFloat: nullableFloat,
            float: value$6,
            nullableBoolean: nullableBoolean,
            boolean: value$4,
            nullableID: nullableID,
            id: value$2
          }
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var MyQuery = {
  Raw: Raw,
  query: \"query   {\\nvariousScalars  {\\nnullableString  \\nstring  \\nnullableInt  \\nint  \\nnullableFloat  \\nfloat  \\nnullableBoolean  \\nboolean  \\nnullableID  \\nid  \\n}\\n\\n}\\n\",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

exports.MyQuery = MyQuery;
/* No side effect */

